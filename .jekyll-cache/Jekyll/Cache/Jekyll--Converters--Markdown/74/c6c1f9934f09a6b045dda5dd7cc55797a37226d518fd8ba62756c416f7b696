I"×"<h1 id="aks-style-guide-template">AKâ€™s Style Guide Template</h1>
<p>A Jekyll-based style guide with single-sourcing across multiple audiences, built by <a href="https://alexakreizinger.com/">Alexa Kreizinger</a>.</p>

<p>Please note that various company names and product guidelines have been replaced with references to Aperture Science, a fictional organization from the <em>Portal</em> universe. Thank you for helping us help you help us all.</p>

<h2 id="why-this-exists">Why this exists</h2>

<p>Style guides an excellent, vital resource for any organizationâ€”but what happens when you need to maintain multiple style guides for different audiences?</p>

<p>Rules that apply to someone designing a user interface, for example, may not apply to someone writing press releases, so it doesnâ€™t make sense to use a single style guide for both. On the other hand, other rules certainly <em>will</em> apply to both audiences, and it can be tough to keep these rules in sync if theyâ€™re sourced from entirely separate guides.</p>

<p>This template strikes a balance between the need to maintain discrete rules for separate audiences with the need to unify rules that apply to one or more audiences. Although certain style rules appear multiple times throughout this guide, each rule was only recorded in a single location; by using a tagging system, each rule is automatically populated in the relevant sections for any applicable audience (i.e., <a href="/dev">Developers</a>, <a href="/mktg">Marketers</a>, and/or <a href="/tw">Technical Writers</a>. As such, if you ever need to edit or delete a rule, you only need to edit the ruleâ€™s source file instead of painstakingly editing the three separate sections where it could possibly appear.</p>

<p>This template is also designed to be scalable, regardless of whether you have three audiences or thirty.</p>

<h2 id="how-it-works">How it works</h2>

<p>TL;DR: A combination of YAML files, include tags, and Liquid variables that essentially turn your style ruleset into a mini database. (This is somehow both more complicated and less complicated than it sounds, but donâ€™t worryâ€”Iâ€™ve already brute-forced my way through Jekyllâ€™s idiosyncrasies so you donâ€™t have to.)</p>

<h3 id="style-rules-and-yaml">Style rules and YAML</h3>
<p>Lists of style rules are stored in a series of YAML files in the <a href="https://github.com/alexakreizinger/styleguidetemplate/tree/main/_data/stylerules"><code class="language-plaintext highlighter-rouge">_data/stylerules/</code></a> directory. For example, a basic ruleset file called <code class="language-plaintext highlighter-rouge">punctuation.yml</code> might look like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>description: Rules about punctuation.

rules:
- section: Semicolons
  topics:

  - rule: |
      ### Avoid overuse&lt;br&gt;
      Semicolons are your friend; however, like any friend, you might get sick of them if they show up too frequently. Tread carefully and wisely.
    audience: [tw, dev, mktg]

  - rule: |
      ### Clauses&lt;br&gt;
      You can use a semicolon to connect two independent clauses.
    examples:
      - |
        **Example:** The film received terrible reviews; none of the reviewers could even stay awake through the whole thing.
    audience: [tw, mktg]
</code></pre></div></div>

<p>Thereâ€™s a lot going on here, but the most important thing to note so far is the <code class="language-plaintext highlighter-rouge">audience</code> key. The first rule has the <code class="language-plaintext highlighter-rouge">tw</code>, <code class="language-plaintext highlighter-rouge">mktg</code>, and <code class="language-plaintext highlighter-rouge">dev</code> tags, corresponding to Technical Writers, Developers, and Marketers, respectively. The second rule, on the other hand, only applies to Technical Writers and Marketers.</p>

<p>Hereâ€™s a slightly expanded example of the <code class="language-plaintext highlighter-rouge">punctuation.yml</code> ruleset file:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>description: Rules about punctuation.

- section: Commas
  topics:

  - rule: |
      ### Clauses&lt;br&gt;
      If two independent clauses are separated by a coordinating conjunction, use a comma unless both clauses are very short.
    examples:
      - |
        **Long:** We built everything slowly over the course of several months, and it all seems to work so far.
      - |
        **Short:** We worked too quickly and it all fell apart.
    audience: [tw, mktg]

  - rule: |
      If a dependent clause and an independent clause are separated by a coordinating conjunction, don't use a comma unless the sentence would be unclear without it.
    examples:
      - |
        **Clear without comma:** The vacuum of space is cold and will kill you almost instantly. 
      - |
        **Needs comma for clarity:** Vacuums are unforgiving in space, but clean carpets marvelously well.
    audience: [tw, mktg]

  - rule: |
      ### Serial commas&lt;br&gt;
      Use serial commas (also known as *Oxford commas*).
    examples:
      - |
        **No:** I love my parents, Godzilla and Wonder Woman.
      - |
        **Yes:** I love my parents, Godzilla, and Wonder Woman.
    audience: [tw, dev, mktg]
    featured: |
      [Use serial commas.]({{site.baseurl}}{{page.permalink}}punctuation/#serial-commas)

rules:
- section: Semicolons
  topics:

  - rule: |
      ### Avoid overuse&lt;br&gt;
      Semicolons are your friend; however, like any friend, you might get sick of them if they show up too frequently. Tread carefully and wisely.
    audience: [tw, dev, mktg]

  - rule: |
      ### Clauses&lt;br&gt;
      You can use a semicolon to connect two independent clauses.
    examples:
      - |
        **Example:** The film received terrible reviews; none of the reviewers could even stay awake through the whole thing.
    audience: [tw, mktg]
</code></pre></div></div>

<p>Taken as a whole, this file creates a <strong>Punctuation</strong> ruleset with two sections: <strong>Commas</strong> and <strong>Semicolons</strong>. Each of these sections includes various rules.</p>

<p>Each rule has, at a minimum, the actual body of a rule and the audience to whom it applies. Some rules also have examples; other rules have a <code class="language-plaintext highlighter-rouge">featured</code> tag, which consists of a short blurb and a hyperlink, but the hyperlink uses Liquid tags to ensure that any fetched content is populated with the correct URL path.</p>

<h3 id="include-tags">Include tags</h3>
<p>There are several files in the <code class="language-plaintext highlighter-rouge">_includes</code> folder that contain Liquid loops to iterate over each rule file and pull the relevant information, depending on your needs.</p>

<p><a href="https://github.com/alexakreizinger/styleguidetemplate/blob/main/_includes/get_all_rules.md"><code class="language-plaintext highlighter-rouge">get_all_rules.md</code></a> does exactly what it saysâ€”it fetches a list of all rules in a given YAML file, regardless of audience.</p>

<p><a href=""><code class="language-plaintext highlighter-rouge">get_rules_for_audience.md</code></a> accepts an <code class="language-plaintext highlighter-rouge">audience</code> variable and fetches a list of any rules in a given YAML file that are tagged with the provided audience. For example, you might want to fetch all rules that apply to Developers.</p>

<p><a href=""><code class="language-plaintext highlighter-rouge">get_featured_rules.md</code></a> accepts an <code class="language-plaintext highlighter-rouge">audience</code> variable and fetches a list of any featured rules in a given YAML file. These featured rules are displayed on an audienceâ€™s landing page and include hyperlinks to the section where the featured rule resides.</p>

<h3 id="audience-pages">Audience pages</h3>

<h3 id="putting-it-all-together">Putting it all together</h3>

<p>So, for example, if you use the following Liquid tags (where <code class="language-plaintext highlighter-rouge">page.audience</code> is defined in the pageâ€™s YAML frontmatter and has a value of <code class="language-plaintext highlighter-rouge">tw</code>):</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% assign file = site.data.stylerules.punctuation %}
{% assign aud = page.audience %}

{% include get_rules_for_audience.md filename=file audience=aud %}
</code></pre></div></div>

<p>Youâ€™d get a list of all punctuation rules that apply to the <code class="language-plaintext highlighter-rouge">tw</code> audience. Based on the expanded <code class="language-plaintext highlighter-rouge">punctuation.yml</code> file above, that output would look like this:</p>

:ET